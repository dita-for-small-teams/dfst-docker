<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="conceptId">
 <title>Setting Up Command Completion for the <cmdname>d4st</cmdname> Command</title>
 <shortdesc>You can set up tab completion for the parameters to the <cmdname>d4st</cmdname>
    command.</shortdesc>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>command completion</indexterm>
      </keywords>
    </metadata>
  </prolog>
 <conbody>
   <p>The bash shell includes a general tab completion feature that can be set up for any command.
      The D4ST project includes a completion script for the <cmdname>d4st</cmdname> command,
        <filepath>bash_completion.d/d4st.bash-completion</filepath>.</p>
    <p>To set up command completion for the <cmdname>d4st</cmdname> command you link or copy the
        <filepath>d4st.bash-completion</filepath> to the appropriate directory for your bash
      environment.</p>
    <p>In addition, the <cmdname>d4st</cmdname> command must be in your PATH environment variable. </p>
 </conbody>
  <concept id="concept_sns_55c_pz">
    <title>Command Completion Setup: macOS</title>
    <conbody>
      <p>You must have bash completion installed. See <xref
          keyref="website-command-completion-macos"/> for instructions on using homebrew to install
        bash completion if you haven't already.</p>
      <p>To install the completion file link the <filepath>d4st.bash-completion</filepath> file to
          <filepath>/etc/bash_completion.d/d4st</filepath>:<codeblock>$ cd d4st/bash_completion.d
$ ln -s $PWD/d4st.bash-completion `brew --prefix`/etc/bash_completion.d/d4st</codeblock></p>
      <p>You should now be able to type "d4st", space, and tab to get a list of available
        options:<codeblock>Mako:bash_completion.d ekimber$ d4st 
addhooks             cleanimages          gitlab               log-gitlab           pause                stop                 up                   
cleanall             down                 kill                 make-gitlab-project  pull                 test-gitlab          
cleancontainers      getdemo              linkmgr              make-gitlab-user     start                unpause              
Mako:bash_completion.d ekimber$ d4st</codeblock></p>
    </conbody>
  </concept>
  <concept id="concept_hrh_3vc_pz">
    <title>Command Completion Setup: Windows git bash shell</title>
    <conbody>
      <p>Not entirely sure what the best way to this up permanently is. One solution is to create or
        update your <filepath>~/.bash_profile</filepath> to source the
          <filepath>d4st.bash-completion</filepath> file so that your
          <filepath>~/.bash_profile</filepath> looks like
        this:<codeblock>$ cat ~/.bash_profile
if [ -f ~/.bashrc ]; then . ~/.bashrc; fi
export PATH=$PATH:/c/Users/ekimber/apps/d4st-docker
source "/c/Users/ekimber/apps/d4st-docker/bash_completion.d/d4st.bash-completion"
$</codeblock></p>
      <p>You should now be able to type "d4st", space, and tab to get a list of available
        options:<codeblock>ekimber@WIN-HH0I81E3DAU MINGW64 /
$ d4st
addhooks             getdemo              make-gitlab-project  stop
cleanall             gitlab               make-gitlab-user     test-gitlab
cleancontainers      kill                 pause                unpause
cleanimages          linkmgr              pull                 up
down                 log-gitlab           start

ekimber@WIN-HH0I81E3DAU MINGW64 / </codeblock></p>
    </conbody>
  </concept>
  <concept id="concept_ezb_3wc_pz">
    <title>Command Completion Setup: Linux</title>
    <conbody>
      <p>To install the completion file link the <filepath>d4st.bash-completion</filepath> file to
          <filepath>/etc/bash_completion.d/d4st</filepath>:<codeblock>$ cd d4st/bash_completion.d
$ sudo ln -s $PWD/d4st.bash-completion /etc/bash_completion.d/d4st</codeblock></p>
      <p>You should now be able to type "d4st", space, and tab to get a list of available
        options:<codeblock>ekimber@WIN-HH0I81E3DAU:/mnt/c/Users/ekimber/apps/d4st-docker$ d4st
addhooks             down                 linkmgr              pause                test-gitlab
cleanall             getdemo              log-gitlab           pull                 unpause
cleancontainers      gitlab               make-gitlab-project  start                up
cleanimages          kill                 make-gitlab-user     stop
ekimber@WIN-HH0I81E3DAU:/mnt/c/Users/ekimber/apps/d4st-docker$ </codeblock></p>
    </conbody>
  </concept>
</concept>
